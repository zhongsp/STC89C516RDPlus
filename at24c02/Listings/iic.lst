C51 COMPILER V9.60.0.0   IIC                                                               06/27/2022 11:56:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN iic.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE App\iic.c OPTIMIZE(8,SPEED) INCDIR(.\App;.\Public) DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\iic.lst) OBJECT(iic.obj)

line level    source

   1          #include "public.h"
   2          #include "iic.h"
   3          
   4          /********************************************************************
   5          ***********
   6          * 函数名: iic_start
   7          * 函数功能: 产生IIC 起始信号
   8          * 输入: 无
   9          * 输出: 无
  10          *********************************************************************
  11          **********/
  12          void iic_start(void)
  13          {
  14   1          IIC_SCL = 1;
  15   1          IIC_SDA = 1;
  16   1          delay_10us(1);
  17   1          IIC_SDA = 0; //当SCL 为高电平时，SDA 由高变为低
  18   1          delay_10us(1);
  19   1          IIC_SCL = 0; //钳住I2C 总线，准备发送或接收数据
  20   1      }
  21          /********************************************************************
  22          ***********
  23          * 函数名: iic_stop
  24          * 函数功能: 产生IIC 停止信号
  25          * 输入: 无
  26          * 输出: 无
  27          *********************************************************************
  28          **********/
  29          void iic_stop(void)
  30          {
  31   1          IIC_SCL = 1;
  32   1          IIC_SDA = 0;
  33   1          delay_10us(1);
  34   1          IIC_SDA = 1; //当SCL 为高电平时，SDA 由低变为高
  35   1          delay_10us(1);
  36   1      }
  37          /********************************************************************
  38          ***********
  39          * 函数名: iic_ack
  40          * 函数功能: 产生ACK 应答
  41          * 输入: 无
  42          * 输出: 无
  43          *********************************************************************
  44          **********/
  45          void iic_ack(void)
  46          {
  47   1          IIC_SCL = 0;
  48   1          IIC_SDA = 0; // SDA 为低电平
  49   1          delay_10us(1);
  50   1          IIC_SCL = 1;
  51   1          delay_10us(1);
  52   1          IIC_SCL = 0;
  53   1      }
  54          /********************************************************************
C51 COMPILER V9.60.0.0   IIC                                                               06/27/2022 11:56:00 PAGE 2   

  55          ***********
  56          * 函数名: iic_nack
  57          * 函数功能: 产生NACK 非应答
  58          * 输入: 无
  59          * 输出: 无
  60          *********************************************************************
  61          **********/
  62          void iic_nack(void)
  63          {
  64   1          IIC_SCL = 0;
  65   1          IIC_SDA = 1; // SDA 为高电平
  66   1          delay_10us(1);
  67   1          IIC_SCL = 1;
  68   1          delay_10us(1);
  69   1          IIC_SCL = 0;
  70   1      }
  71          /********************************************************************
  72          ***********
  73          * 函数名: iic_wait_ack
  74          * 函数功能: 等待应答信号到来
  75          * 输入: 无
  76          * 输出: 1，接收应答失败
  77          0，接收应答成功
  78          *********************************************************************
  79          **********/
  80          u8 iic_wait_ack(void)
  81          {
  82   1          u8 time_temp = 0;
  83   1          IIC_SCL = 1;
  84   1          delay_10us(1);
  85   1          while (IIC_SDA) //等待SDA 为低电平
  86   1          {
  87   2              time_temp++;
  88   2              if (time_temp > 100) //超时则强制结束IIC 通信
  89   2              {
  90   3                  iic_stop();
  91   3                  return 1;
  92   3              }
  93   2          }
  94   1          IIC_SCL = 0;
  95   1          return 0;
  96   1      }
  97          /********************************************************************
  98          ***********
  99          * 函数名: iic_write_byte
 100          * 函数功能: IIC 发送一个字节
 101          * 输入: dat：发送一个字节
 102          * 输出: 无
 103          *********************************************************************
 104          **********/
 105          void iic_write_byte(u8 dat)
 106          {
 107   1          u8 i = 0;
 108   1          IIC_SCL = 0;
 109   1          for (i = 0; i < 8; i++) //循环8 次将一个字节传出，先传高再传低位
 110   1          {
 111   2              if ((dat & 0x80) > 0)
 112   2                  IIC_SDA = 1;
 113   2              else
 114   2                  IIC_SDA = 0;
 115   2              dat <<= 1;
 116   2              delay_10us(1);
C51 COMPILER V9.60.0.0   IIC                                                               06/27/2022 11:56:00 PAGE 3   

 117   2              IIC_SCL = 1;
 118   2              delay_10us(1);
 119   2              IIC_SCL = 0;
 120   2              delay_10us(1);
 121   2          }
 122   1      }
 123          /********************************************************************
 124          ***********
 125          285
 126          * 函数名: iic_read_byte
 127          * 函数功能: IIC 读一个字节
 128          * 输入: ack=1 时，发送ACK，ack=0，发送nACK
 129          * 输出: 应答或非应答
 130          *********************************************************************
 131          **********/
 132          u8 iic_read_byte(u8 ack)
 133          {
 134   1          u8 i = 0, receive = 0;
 135   1          for (i = 0; i < 8; i++) //循环8 次将一个字节读出，先读高再传低位
 136   1          {
 137   2              IIC_SCL = 0;
 138   2              delay_10us(1);
 139   2              IIC_SCL = 1;
 140   2              receive <<= 1;
 141   2              if (IIC_SDA)
 142   2                  receive++;
 143   2              delay_10us(1);
 144   2          }
 145   1          if (!ack)
 146   1              iic_nack();
 147   1          else
 148   1              iic_ack();
 149   1          return receive;
 150   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    269    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
